<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>number2_ft = font_add_sprite_ext(number2_sp,"0123456789m",true,2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(number_cover_sp,-1,60,34)
draw_sprite(coin_sp,1,27,16)
draw_set_font(number2_ft);
draw_set_colour(c_white);
draw_set_halign(fa_right);
draw_text(270,44,string(global.coin));
draw_set_halign(fa_left);

draw_sprite(number_cover_sp,-1,333,34)
draw_sprite(gem_sp,1,300,16)
draw_set_font(number2_ft);
draw_set_colour(c_white);
draw_set_halign(fa_right);
draw_text(543,44,0);
draw_set_halign(fa_left);
draw_set_font(font_20);

switch(global.character)
{
case 1 :
draw_set_colour(c_black);
draw_sprite(stat_name_sp,0,136,384);
draw_sprite(stat_text_sp,0,136,416);
draw_text(320,384,string(global.waterspeed1_point) +" / 10");

draw_sprite(stat_name_sp,1,136,480);
draw_sprite(stat_text_sp,1,136,512);
draw_text(320,480,string(global.ledderspeed1_point) +" / 10");

draw_sprite(stat_name_sp,2,136,576);
draw_sprite(stat_text_sp,2,136,608);
draw_text(320,576,string(global.leddermake1_point) +" / 10");

draw_sprite(stat_name_sp,3,136,672);
draw_sprite(stat_text_sp,3,136,704);
draw_text(320,672,string(global.chatacterspeed1_point) +" / 10");

draw_sprite(stat_name_sp,4,136,768);
draw_sprite(stat_text_sp,4,136,800);
draw_text(320,768,string(global.feverpower1_point) +" / 10");

if global.waterspeed1_point &lt;10
{
draw_text(512,384,string(500*global.waterspeed1_point+100*(global.waterspeed1_point-1)) +" G");
}
else
{
draw_text(512,384,"    Max");
}

if global.ledderspeed1_point &lt;10
{
draw_text(512,480,string(500*global.ledderspeed1_point+100*(global.ledderspeed1_point-1)) +" G");
}
else
{
draw_text(512,480,"    Max");
}

if global.leddermake1_point &lt;10
{
draw_text(512,576,string(500*global.leddermake1_point+100*(global.leddermake1_point-1)) +" G");
}
else
{
draw_text(512,576,"    Max");
}

if global.chatacterspeed1_point &lt;10
{
draw_text(512,672,string(500*global.chatacterspeed1_point+100*(global.chatacterspeed1_point-1)) +" G");
}
else
{
draw_text(512,672,"    Max");
}

if global.feverpower1_point &lt;10
{
draw_text(512,768,string(500*global.feverpower1_point+100*(global.feverpower1_point-1)) +" G");
}
else
{
draw_text(512,768,"    Max");
}

break;


case 2 :
draw_set_colour(c_black);
draw_sprite(stat_name_sp,0,136,384);
draw_sprite(stat_text_sp,0,136,416);
draw_text(320,384,string(global.waterspeed2_point) +" / 10");

draw_sprite(stat_name_sp,1,136,480);
draw_sprite(stat_text_sp,1,136,512);
draw_text(320,480,string(global.ledderspeed2_point) +" / 10");

draw_sprite(stat_name_sp,2,136,576);
draw_sprite(stat_text_sp,2,136,608);
draw_text(320,576,string(global.leddermake2_point) +" / 10");

draw_sprite(stat_name_sp,3,136,672);
draw_sprite(stat_text_sp,3,136,704);
draw_text(320,672,string(global.chatacterspeed2_point) +" / 10");

draw_sprite(stat_name_sp,4,136,768);
draw_sprite(stat_text_sp,4,136,800);
draw_text(320,768,string(global.feverpower2_point) +" / 10");

if global.waterspeed2_point &lt;10
{
draw_text(512,384,string(500*global.waterspeed2_point+100*(global.waterspeed2_point-1)) +" G");
}
else
{
draw_text(512,384,"    Max");
}

if global.ledderspeed2_point &lt;10
{
draw_text(512,480,string(500*global.ledderspeed2_point+100*(global.ledderspeed2_point-1)) +" G");
}
else
{
draw_text(512,480,"    Max");
}

if global.leddermake2_point &lt;10
{
draw_text(512,576,string(500*global.leddermake2_point+100*(global.leddermake2_point-1)) +" G");
}
else
{
draw_text(512,576,"    Max");
}

if global.chatacterspeed2_point &lt;10
{
draw_text(512,672,string(500*global.chatacterspeed2_point+100*(global.chatacterspeed2_point-1)) +" G");
}
else
{
draw_text(512,672,"    Max");
}

if global.feverpower2_point &lt;10
{
draw_text(512,768,string(500*global.feverpower2_point+100*(global.feverpower2_point-1)) +" G");
}
else
{
draw_text(512,768,"    Max");
}

break;


case 3 :
draw_set_colour(c_black);
draw_sprite(stat_name_sp,0,136,384);
draw_sprite(stat_text_sp,0,136,416);
draw_text(320,384,string(global.waterspeed3_point) +" / 10");

draw_sprite(stat_name_sp,1,136,480);
draw_sprite(stat_text_sp,1,136,512);
draw_text(320,480,string(global.ledderspeed3_point) +" / 10");

draw_sprite(stat_name_sp,2,136,576);
draw_sprite(stat_text_sp,2,136,608);
draw_text(320,576,string(global.leddermake3_point) +" / 10");

draw_sprite(stat_name_sp,3,136,672);
draw_sprite(stat_text_sp,3,136,704);
draw_text(320,672,string(global.chatacterspeed3_point) +" / 10");

draw_sprite(stat_name_sp,4,136,768);
draw_sprite(stat_text_sp,4,136,800);
draw_text(320,768,string(global.feverpower3_point) +" / 10");

if global.waterspeed3_point &lt;10
{
draw_text(512,384,string(500*global.waterspeed3_point+100*(global.waterspeed3_point-1)) +" G");
}
else
{
draw_text(512,384,"    Max");
}

if global.ledderspeed3_point &lt;10
{
draw_text(512,480,string(500*global.ledderspeed3_point+100*(global.ledderspeed3_point-1)) +" G");
}
else
{
draw_text(512,480,"    Max");
}

if global.leddermake3_point &lt;10
{
draw_text(512,576,string(500*global.leddermake3_point+100*(global.leddermake3_point-1)) +" G");
}
else
{
draw_text(512,576,"    Max");
}

if global.chatacterspeed3_point &lt;10
{
draw_text(512,672,string(500*global.chatacterspeed3_point+100*(global.chatacterspeed3_point-1)) +" G");
}
else
{
draw_text(512,672,"    Max");
}

if global.feverpower3_point &lt;10
{
draw_text(512,768,string(500*global.feverpower3_point+100*(global.feverpower3_point-1)) +" G");
}
else
{
draw_text(512,768,"    Max");
}

break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
